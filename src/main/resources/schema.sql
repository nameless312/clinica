SELECT 1;

create table if not exists clinica.tuser(
	user_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	first_name varchar(40) NOT NULL,
	last_name varchar(40) NOT NULL,
	enabled TINYINT NOT NULL DEFAULT 1,
	email varchar(60) NOT NULL,
  	"password" varchar(200) NOT null,
  	"role" varchar(10) not null,
  	dt_added timestamp default now() not null,
  	dt_update timestamp
);	

create table if not exists clinica.tdistrict(
	district_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	district_name varchar(50) not null,
	user_id int references tuser(user_id),
	dt_added timestamp default now() not null,
  	dt_update timestamp
);

create table if not exists clinica.tconcelho(
	concelho_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	district_id int references tdistrict(district_id),
	concelho_name varchar(50) not null,
	user_id int references tuser(user_id),
	dt_added timestamp default now() not null,
  	dt_update timestamp
);

create table if not exists clinica.taddress(
	address_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	user_id int references tuser(user_id),
	concelho_id int references tconcelho(concelho_id),
	district_id int references tdistrict(district_id),
  	street_name varchar(100),
  	city varchar(30),
  	zip_code varchar(12),
  	locality varchar(30),
	dt_added timestamp default now() not null,
  	dt_update timestamp
);

create table if not exists clinica.tmarketing(
	marketing_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	user_id int references tuser(user_id),
  	channel varchar(15),
  	dt_added timestamp default now() not null,
  	dt_update timestamp
);

create table if not exists clinica.tprocedures(
	procedure_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	user_id int references tuser(user_id),
	dt_added timestamp default now() not null,
  	dt_update timestamp,
  	procedure_desc varchar(50) not null
);


create table if not exists clinica.tservice_type(
	service_type_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	user_id int references tuser(user_id),
	dt_added timestamp default now() not null,
  	dt_update timestamp,
  	service_name varchar(50) not null,
  	reference_cost decimal not null
);

create table if not exists clinica.ttechnique(
	technique_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	user_id int references tuser(user_id),
	dt_added timestamp default now() not null,
  	dt_update timestamp,
  	technique varchar(50) not null
);

create table if not exists clinica.ttechnique_services(
	technique_service_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	user_id int references tuser(user_id),
	technique_id int references ttechnique(technique_id),
	service_type_id int references tservice_type(service_type_id),
	dt_added timestamp default now() not null,
  	dt_update timestamp
);

create table if not exists clinica.tequipment(
	equipment_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	user_id int references tuser(user_id),
	dt_added timestamp default now() not null,
  	dt_update timestamp,
  	equipment_name varchar(50) not null
);

create table if not exists clinica.tfixed_costs(
	fixed_cost_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	user_id int references tuser(user_id),
	dt_added timestamp default now() not null,
  	dt_update timestamp,
  	cost_name varchar(50) not null,
  	cost_value decimal not null
);

create table if not exists clinica.texpenses_types(
	expense_type_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	user_id int references tuser(user_id),
	dt_added timestamp default now() not null,
  	dt_update timestamp,
  	expense_name varchar(50) not null
);

create table if not exists clinica.texpenses(
	expense_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	user_id int references tuser(user_id),
	expense_type_id int references texpenses_types(expense_type_id),
	dt_added timestamp default now() not null,
  	dt_update timestamp,
  	dt_expense timestamp not null,
    "value" decimal not null,
  	obs varchar(50)
);

create table if not exists clinica.tincome_types(
	income_type_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	user_id int references tuser(user_id),
	dt_added timestamp default now() not null,
  	dt_update timestamp,
  	type_name varchar(50) not null
);


create table if not exists clinica.tincomes(
	income_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	user_id int references tuser(user_id),
	income_type_id int references tincome_types(income_type_id),
	dt_added timestamp default now() not null,
  	dt_update timestamp,
  	dt_income timestamp not null,
  	"value" decimal not null,
  	obs varchar(50)
);

create table if not exists clinica.ttime_limits(
	time_limit_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	user_id int references tuser(user_id),
	dt_added timestamp default now() not null,
  	dt_update timestamp,
  	limit_value int not null,
  	limit_name varchar(50) not null
);

create table if not exists clinica.tmonth(
	month_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	user_id int references tuser(user_id),
	dt_added timestamp default now() not null,
  	dt_update timestamp,
  	month_name varchar(20) not null,
  	month_value int not null
);

create table if not exists clinica.tpartnerships(
	partnership_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	user_id int references tuser(user_id),
	dt_added timestamp default now() not null,
  	dt_update timestamp,
  	partner varchar(50) not null,
  	locality varchar(30) not null,
  	mobile varchar(15),
  	commision int not null,
  	job varchar(50)
);

create table if not exists clinica.tpackage(
	package_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	user_id int references tuser(user_id),
	dt_added timestamp default now() not null,
  	dt_update timestamp,
  	package_type varchar(50) not null
);

create table if not exists clinica.tproduct_group(
	product_group_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	user_id int references tuser(user_id),
	dt_added timestamp default now() not null,
  	dt_update timestamp,
  	group_name varchar(30) not null
);

create table if not exists clinica.tproducts(
	product_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	user_id int references tuser(user_id),
	package_id int references tpackage(package_id),
	product_group_id int references tproduct_group(product_group_id),
	dt_added timestamp default now() not null,
  	dt_update timestamp,
  	brand varchar(40) not null,
  	supplier varchar(50),
  	product_name varchar(50) not null,
  	minimum_stock int not null,
  	items_per_box int not null,
  	ref_items_consumed decimal not null,
  	ref_cost decimal,
  	exp_date timestamp ,
  	status boolean not null,
  	product_ref varchar(50)
);

create table if not exists clinica.tproduct_services(
	product_service_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	user_id int references tuser(user_id),
	service_type_id int references tservice_type(service_type_id),
	product_id int references tproducts(product_id),
	dt_added timestamp default now() not null,
  	dt_update timestamp
);

create table if not exists clinica.tclient(
	client_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	user_id int references tuser(user_id),
	address_id int references taddress(address_id),
	marketing_id int references tmarketing(marketing_id),
	partnership_id int references tpartnerships(partnership_id),
	dt_added timestamp default now() not null,
  	dt_update timestamp,
  	dt_registered timestamp,
  	full_name varchar(200) not null,
  	name_abbr varchar(40) not null,
  	email varchar(50),
	birthdate timestamp,
	mobile varchar(30),
	lanline varchar(30),
	notes varchar(300),
	gender varchar(5),
	ssn varchar(20)
);

create table if not exists clinica.tnext_appointments(
	next_appointment_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	user_id int references tuser(user_id),
  	dt_added timestamp default now() not null,
  	dt_update timestamp,
  	client_id int references tclient(client_id),
  	next_appointment timestamp,
  	service_type_id int references tservice_type(service_type_id)
);

create table if not exists clinica.tgift_card(
	gift_card_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	user_id int references tuser(user_id),
	client_id int references tclient(client_id),
	service_type_id int references tservice_type(service_type_id),
	dt_added timestamp default now() not null,
  	dt_update timestamp,
  	dt_gift_card timestamp default now() not null,
  	reference varchar(20) not null,
    "value" decimal not null,
  	remaining_value decimal not null,
  	max_days_usage int not null,
  	status varchar(20) not null,
  	obs varchar(300)
);

create table if not exists clinica.tstock_movement_type(
	movement_type_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	user_id int references tuser(user_id),
	dt_added timestamp default now() not null,
  	dt_update timestamp,
  	mov_type varchar(15) not null
);

create table if not exists clinica.tstock(
	stock_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	user_id int references tuser(user_id),
	product_id int references tproducts(product_id),
	movement_type_id int references tstock_movement_type(movement_type_id),
	dt_added timestamp default now() not null,
  	dt_update timestamp,
  	dt_movement timestamp,
  	quantity int not null,
  	obs varchar(100)
);

create table if not exists clinica.tservice_desc(
	service_desc_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	user_id int references tuser(user_id),
	client_id int references tclient(client_id),
	service_type_id int references tservice_type(service_type_id),
	procedure_id int references tprocedures(procedure_id),
	technique_id int references ttechnique(technique_id),
	dt_added timestamp default now() not null,
  	dt_update timestamp,
  	dt_service timestamp not null,
  	service_cost decimal not null,
  	security_deposit decimal default 0,
  	penalization decimal default 0,
  	paid_value decimal not null,
  	commision decimal default 0,
  	discount_percentage int default 0,
  	tip decimal default 0,
  	minutes_used int not null,
  	used_cream boolean not null,
  	num_pills int not null,
  	obs varchar(300)
);

create table if not exists clinica.tservice_equipments_used(
	service_equipments_used_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	user_id int references tuser(user_id),
	service_desc_id int references tservice_desc(service_desc_id),
	equipment_id int references tequipment(equipment_id),
	dt_added timestamp default now() not null,
  	dt_update timestamp
);

create table if not exists clinica.tservice_products_used(
	service_products_used_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	user_id int references tuser(user_id),
	service_desc_id int references tservice_desc(service_desc_id),
	product_id int references tproducts(product_id),
	dt_added timestamp default now() not null,
  	dt_update timestamp
);

create table if not exists clinica.tservices(
	service_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	user_id int references tuser(user_id),
	service_desc_id int references tservice_desc(service_desc_id),
	service_equipments_used_id int references tservice_equipments_used(service_equipments_used_id),
	service_products_used_id int references tservice_products_used(service_products_used_id),
	dt_added timestamp default now() not null,
  	dt_update timestamp
);

update clinica.taddress a set
district_id = (select district_id from clinica.tconcelho b where b.concelho_id = a.concelho_id),
dt_update = now();

